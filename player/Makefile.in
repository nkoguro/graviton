.PHONY: build-all zip-all build install clean distclean maintainer-clean

DESTDIR =

PLATFORM_ARCHS := win32-x64 win32-ia32 darwin-x64 linux-x64 linux-armv7l linux-arm64
DEFAULT_PLATFORM_ARCH := @GRAVITON_PLAYER_ARCH@

BUILD_TARGETS :=
ZIP_TARGETS :=

SRCS := src/main.js src/renderer.js

CONFIG_GENERATED = Makefile

PLAYER_INSTALL_DIR := "$(DESTDIR)$(shell gosh -I ../lib -ugraviton.config -e "(print (graviton-config 'graviton-player-install-dir)) (exit 0)")"

.DEFAULT_GOAL := build

define player-template
.PHONY: build-$(1)

.build-$(1).done: $(SRCS)
	if [ ! -d src/node_modules ]; then \
	  (cd src; npm ci) \
	fi
	(cd src; npx electron-packager . graviton-player --platform=$(word 1,$(subst -, ,$(1))) --arch=$(word 2,$(subst -, ,$(1))) --out=.. --verbose --overwrite)
	touch .build-$(1).done

build-$(1): .build-$(1).done

BUILD_TARGETS := $(BUILD_TARGETS) build-$(1)

graviton-player-$(1).zip: build-$(1)
	zip -r $$@ graviton-player-$(1)

ZIP_TARGETS := $(ZIP_TARGETS) graviton-player-$(1).zip

endef

$(foreach platform_arch,$(PLATFORM_ARCHS),$(eval $(call player-template,$(platform_arch))))

build-all: $(BUILD_TARGETS)

zip-all: $(ZIP_TARGETS)

build: build-$(DEFAULT_PLATFORM_ARCH)

install: build
	mkdir -p $(PLAYER_INSTALL_DIR)
	cp -R graviton-player-$(DEFAULT_PLATFORM_ARCH) $(PLAYER_INSTALL_DIR)

uninstall:
	rm -Rf $(PLAYER_INSTALL_DIR)/graviton-player-$(DEFAULT_PLATFORM_ARCH)

clean:
	rm -Rf graviton-player-* .build-*.done

distclean:
	rm -Rf $(CONFIG_GENERATED) src/node_modules

maintainer-clean: clean
	rm -Rf $(CONFIG_GENERATED) src/node_modules
