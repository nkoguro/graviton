(use gauche.logger)
(use graviton)
(use graviton.canvas)
(use math.const)
(use util.list)

(define (main args)
  ;; (set-graviton-open-dev-tools! #t)
  ;; (set-graviton-port! 8080)
  ;; (set-graviton-use-player! #f)
  (grv-begin
    (receive (w h) (await (window-size))
      (log-format "window width=~a, height=~a" w h))
    (set-window-event-handler! 'keyup (lambda (event)
                                        (when (equal? (slot-ref event 'code) "Escape")
                                          (app-close))))
    (let1 canvas (make-canvas 150 200)
      (set-canvas-event-handler! canvas 'click (lambda (event)
                                                 #?=(slot-ref event 'canvas-x)
                                                 #?=(slot-ref event 'canvas-y)))
      (dotimes (i 4)
        (dotimes (j 3)
          (let ((x (+ 25 (* j 50)))
                (y (+ 25 (* i 50)))
                (radius 20)
                (start-angle 0)
                (end-angle (+ pi (/ (* pi j) 2)))
                (anti-clockwise (odd? (modulo i 2))))
            (begin-path)
            (arc x y radius start-angle end-angle anti-clockwise)
            (if (< 1 i)
                (fill)
                (stroke)))))))
  0)
