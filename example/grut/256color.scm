(use gauche.parseopt)
(use graviton)
(use graviton.grut)
(use srfi-42)
(use text.html-lite)

(define (main args)
  (let-args (cdr args)
      ((force-player? "player" #f)
       (force-browser? "browser" #f)
       (force-server? "server" #f))
    (grv-config :mode (cond
                        (force-player? 'player)
                        (force-browser? 'browser)
                        (force-server? 'server)
                        (else #f)))
    (with-window (grut-text-window :column 42 :row 15 :fit 'contain)
        (text-console)
      (on-jsevent window "keyup" (key)
        (when (equal? key "Escape")
          (close-window)))

      (with-output-to-port text-console
        (lambda ()
          (display "System colors:\n")
          (do-ec (: color 8)
                 (display #"\x1b[48;5;~|color|m "))
          (display "\x1b[0m\n")
          (do-ec (: color 8 16)
                 (display #"\x1b[48;5;~|color|m "))
          (display "\x1b[0m\n\n")

          (display "Color cube, 6x6x6:\n")
          (dotimes (green 6)
            (dotimes (red 6)
              (dotimes (blue 6)
                (let1 color (+ 16 (* 36 red) (* 6 green) blue)
                  (display #"\x1b[48;5;~|color|m ")))
              (display "\x1b[0m "))
            (display "\n"))

          (display "Grayscale ramp:\n")
          (do-ec (: color 232 256)
                 (display #"\x1b[48;5;~|color|m "))
          (display "\x1b[0m\n"))))))
